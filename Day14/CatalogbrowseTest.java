// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.remote.RemoteWebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import java.net.MalformedURLException;
import java.net.URL;
public class CatalogbrowseTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  public String waitForWindow(int timeout) {
    try {
      Thread.sleep(timeout);
    } catch (InterruptedException e) {
      e.printStackTrace();
    }
    Set<String> whNow = driver.getWindowHandles();
    Set<String> whThen = (Set<String>) vars.get("window_handles");
    if (whNow.size() > whThen.size()) {
      whNow.removeAll(whThen);
    }
    return whNow.iterator().next();
  }
  @Test
  public void catalogbrowse() {
    // Test name: catalogbrowse
    // Step # | name | target | value
    // 1 | open | / | 
    driver.get("https://www.amazon.in/");
    // 2 | setWindowSize | 975x708 | 
    driver.manage().window().setSize(new Dimension(975, 708));
    // 3 | mouseOver | css=#tdpBTmo37APyQ8k1mH-dSg .\_cropped-image-link_style_fluidLandscapeImage__3eTVC | 
    {
      WebElement element = driver.findElement(By.cssSelector("#tdpBTmo37APyQ8k1mH-dSg .\\_cropped-image-link_style_fluidLandscapeImage__3eTVC"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 4 | mouseOut | css=#tdpBTmo37APyQ8k1mH-dSg .\_cropped-image-link_style_fluidLandscapeImage__3eTVC | 
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    // 5 | click | css=#GeIn4KiOhsOuV9oYrKZ5NQ .landscape-image | 
    driver.findElement(By.cssSelector("#GeIn4KiOhsOuV9oYrKZ5NQ .landscape-image")).click();
    // 6 | click | css=.sg-col-4-of-24:nth-child(2) .s-image:nth-child(1) | 
    vars.put("window_handles", driver.getWindowHandles());
    // 7 | selectWindow | handle=${win9175} | 
    driver.findElement(By.cssSelector(".sg-col-4-of-24:nth-child(2) .s-image:nth-child(1)")).click();
    // 8 | runScript | window.scrollTo(0,200) | 
    vars.put("win9175", waitForWindow(2000));
    // 9 | click | id=quantity | 
    driver.switchTo().window(vars.get("win9175").toString());
    // 10 | select | id=quantity | label=4
    js.executeScript("window.scrollTo(0,200)");
    // 11 | click | id=add-to-cart-button | 
    driver.findElement(By.id("quantity")).click();
    // 12 | click | css=#attach_add_accessory_button_0-1 .a-button-input | 
    {
      WebElement dropdown = driver.findElement(By.id("quantity"));
      dropdown.findElement(By.xpath("//option[. = '4']")).click();
    }
    // 13 | mouseOver | css=#attach_add_accessory_button_0-1 .a-button-input | 
    driver.findElement(By.id("add-to-cart-button")).click();
    // 14 | runScript | window.scrollTo(0,325) | 
    driver.findElement(By.cssSelector("#attach_add_accessory_button_0-1 .a-button-input")).click();
    // 15 | runScript | window.scrollTo(0,1674.6666259765625) | 
    {
      WebElement element = driver.findElement(By.cssSelector("#attach_add_accessory_button_0-1 .a-button-input"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    // 16 | click | css=#sp_detail_B0BP1MLLYS .sponsored-products-truncator-truncated | 
    js.executeScript("window.scrollTo(0,325)");
    // 17 | selectWindow | handle=${win9242} | 
    js.executeScript("window.scrollTo(0,1674.6666259765625)");
    // 18 | runScript | window.scrollTo(0,430) | 
    vars.put("window_handles", driver.getWindowHandles());
    // 19 | mouseOver | xpath=//div[@id='3']/div/label/span/div/a/div | 
    driver.findElement(By.cssSelector("#sp_detail_B0BP1MLLYS .sponsored-products-truncator-truncated")).click();
    // 20 | mouseOut | xpath=//div[@id='3']/div/label/span/div/a/div | 
    vars.put("win9242", waitForWindow(2000));
    // 21 | runScript | window.scrollTo(0,388) | 
    driver.switchTo().window(vars.get("win9242").toString());
    // 22 | click | id=add-to-cart-button | 
    js.executeScript("window.scrollTo(0,430)");
    {
      WebElement element = driver.findElement(By.xpath("//div[@id=\'3\']/div/label/span/div/a/div"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    js.executeScript("window.scrollTo(0,388)");
    driver.findElement(By.id("add-to-cart-button")).click();
  }
}
