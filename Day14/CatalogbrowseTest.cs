// Generated by Selenium IDE
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using NUnit.Framework;
[TestFixture]
public class CatalogbrowseTest {
  private IWebDriver driver;
  public IDictionary<string, object> vars {get; private set;}
  private IJavaScriptExecutor js;
  [SetUp]
  public void SetUp() {
    driver = new ChromeDriver();
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<string, object>();
  }
  [TearDown]
  protected void TearDown() {
    driver.Quit();
  }
  public string waitForWindow(int timeout) {
    try {
      Thread.Sleep(timeout);
    } catch(Exception e) {
      Console.WriteLine("{0} Exception caught.", e);
    }
    var whNow = ((IReadOnlyCollection<object>)driver.WindowHandles).ToList();
    var whThen = ((IReadOnlyCollection<object>)vars["WindowHandles"]).ToList();
    if (whNow.Count > whThen.Count) {
      return whNow.Except(whThen).First().ToString();
    } else {
      return whNow.First().ToString();
    }
  }
  [Test]
  public void catalogbrowse() {
    driver.Navigate().GoToUrl("https://www.amazon.in/");
    driver.Manage().Window.Size = new System.Drawing.Size(975, 708);
    {
      var element = driver.FindElement(By.CssSelector("#tdpBTmo37APyQ8k1mH-dSg .\\_cropped-image-link_style_fluidLandscapeImage__3eTVC"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    {
      var element = driver.FindElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element, 0, 0).Perform();
    }
    driver.FindElement(By.CssSelector("#GeIn4KiOhsOuV9oYrKZ5NQ .landscape-image")).Click();
    vars["WindowHandles"] = driver.WindowHandles;
    driver.FindElement(By.CssSelector(".sg-col-4-of-24:nth-child(2) .s-image:nth-child(1)")).Click();
    vars["win9175"] = waitForWindow(2000);
    driver.SwitchTo().Window(vars["win9175"].ToString());
    js.ExecuteScript("window.scrollTo(0,200)");
    driver.FindElement(By.Id("quantity")).Click();
    {
      var dropdown = driver.FindElement(By.Id("quantity"));
      dropdown.FindElement(By.XPath("//option[. = '4']")).Click();
    }
    driver.FindElement(By.Id("add-to-cart-button")).Click();
    driver.FindElement(By.CssSelector("#attach_add_accessory_button_0-1 .a-button-input")).Click();
    {
      var element = driver.FindElement(By.CssSelector("#attach_add_accessory_button_0-1 .a-button-input"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    js.ExecuteScript("window.scrollTo(0,325)");
    js.ExecuteScript("window.scrollTo(0,1674.6666259765625)");
    vars["WindowHandles"] = driver.WindowHandles;
    driver.FindElement(By.CssSelector("#sp_detail_B0BP1MLLYS .sponsored-products-truncator-truncated")).Click();
    vars["win9242"] = waitForWindow(2000);
    driver.SwitchTo().Window(vars["win9242"].ToString());
    js.ExecuteScript("window.scrollTo(0,430)");
    {
      var element = driver.FindElement(By.XPath("//div[@id=\'3\']/div/label/span/div/a/div"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element).Perform();
    }
    {
      var element = driver.FindElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.MoveToElement(element, 0, 0).Perform();
    }
    js.ExecuteScript("window.scrollTo(0,388)");
    driver.FindElement(By.Id("add-to-cart-button")).Click();
  }
}
